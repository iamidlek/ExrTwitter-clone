{"version":3,"sources":["components/AuthForm.js","routes/Auth.js","fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","type","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","getAuth","signInWithEmailAndPassword","message","className","placeholder","required","onClick","prev","Auth","onSocialClick","name","GoogleProvider","GoogleAuthProvider","signInWithPopup","console","log","GitHubProvider","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","dbService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","storageService","getStorage","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","NweetTextRef","doc","id","onDeleteClick","window","confirm","deleteDoc","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","nweet","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","setNweet","attachment","setAttachment","imgFileInput","useRef","fileRef","uid","uuidv4","uploadString","response","getDownloadURL","nweetPosting","createdAt","serverTimestamp","creatorId","addDoc","collection","current","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","query","orderBy","snapshot","nweetArray","docs","map","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","onLogOutClick","signOut","push","updateProfile","currentUser","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","Date","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cbd8b4d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  getAuth,\r\n} from \"firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { type, value },\r\n    } = event;\r\n    if (type === \"email\") {\r\n      setEmail(value);\r\n    } else if (type === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(getAuth(), email, password);\r\n      } else {\r\n        data = await signInWithEmailAndPassword(getAuth(), email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"create Account\" : \"Login\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    if (name === \"google\") {\r\n      const GoogleProvider = new GoogleAuthProvider();\r\n      try {\r\n        await signInWithPopup(getAuth(), GoogleProvider);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else if (name === \"github\") {\r\n      const GitHubProvider = new GithubAuthProvider();\r\n      try {\r\n        await signInWithPopup(getAuth(), GitHubProvider);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","// import firebase from \"firebase/compat/app\";\r\n// import \"firebase/compat/auth\";\r\n// import 'firebase/compat/firestore';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\n// firebase.initializeApp(firebaseConfig);\r\n\r\n// export const firebaseInstance = firebase;\r\n\r\n// export const authService = firebase.auth();\r\n\r\nexport const firebaseInstance = initializeApp(firebaseConfig);\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  // 공통 부분\r\n  const NweetTextRef = doc(dbService, \"nweets\", `${nweetObj.id}`);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await deleteDoc(NweetTextRef);\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(NweetTextRef, {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.nweet}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} alt=\"img\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { useState, useRef } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const imgFileInput = useRef();\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      // 유저 아이디로 폴더 구분 / 파일 이름(npm i uuid)\r\n      // 파일에 대한 ref를 가지게 된다\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      // data_url : 포멧명\r\n      const response = await uploadString(fileRef, attachment, \"data_url\");\r\n      // response 에서 해당 파일의 주소 정보를 찾을 수 있다\r\n      // console.log(response);\r\n      //storage에 있는 파일 URL로 다운로드 받기\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n      // console.log(attachmentUrl);\r\n    }\r\n    // nweets컬렉션 추가\r\n    const nweetPosting = {\r\n      nweet,\r\n      createdAt: serverTimestamp(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await addDoc(collection(dbService, \"nweets\"), nweetPosting);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n    imgFileInput.current.value = null;\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => {\r\n    setAttachment(null);\r\n    imgFileInput.current.value = null;\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        ref={imgFileInput}\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      <input type=\"submit\" value=\"Cweet\" />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"img\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { collection, orderBy, onSnapshot, query } from \"firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    onSnapshot(\r\n      query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\")),\r\n      (snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n      }\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import { signOut, getAuth, updateProfile } from \"firebase/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { authService } from \"fbase\";\r\n// import { collection, getDocs, query, where, orderBy } from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = async () => {\r\n    await signOut(getAuth());\r\n    await refreshUser();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(getAuth().currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  // const getMyNweets = async () => {\r\n  //   const q = query(\r\n  //     collection(dbService, \"nweets\"),\r\n  //     where(\"creatorId\", \"==\", userObj.uid)\r\n  //     // orderBy(\"createdAt\", \"desc\")\r\n  //     // 같은 필드만 가능.. 복합 색인 추가하면 이용가능\r\n  //   );\r\n  //   const querySnapshot = await getDocs(q);\r\n  //   querySnapshot.forEach((doc) => {\r\n  //     console.log(doc.id, \" => \", doc.data());\r\n  //   });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getMyNweets();\r\n  // }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { getAuth, updateProfile } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    getAuth().onAuthStateChanged(async (user) => {\n      if (user) {\n        if (user.displayName === null) {\n          await updateProfile(user, {\n            displayName: \"Not setted\",\n          });\n        }\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n        });\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    // firebase에서 갱신된 (onAuthStateChanged)현 로그인 정보\n    const user = getAuth().currentUser;\n    if (user) {\n      setUserObj({\n        displayName: user.displayName,\n        uid: user.uid,\n      });\n    } else {\n      setUserObj(null);\n    }\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          // setUserObj={setUserObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} twitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { firebaseInstance } from \"fbase\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}